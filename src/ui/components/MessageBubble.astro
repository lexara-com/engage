---
import type { ChatMessage } from '../types/chat';
import { formatTimestamp } from '../utils/chat';

export interface Props {
  message: ChatMessage;
  isLatest?: boolean;
}

const { message, isLatest = false } = Astro.props;
---

<div class={`flex ${message.role === 'user' ? 'justify-end' : message.role === 'system' ? 'justify-center' : 'justify-start'}`}>
  <div class={`
    message-bubble 
    ${message.role === 'user' ? 'message-user' : message.role === 'system' ? 'message-system' : 'message-ai'}
    ${isLatest ? 'animate-slide-up' : ''}
    ${message.metadata?.isStreaming ? 'opacity-80' : ''}
  `}>
    {message.role === 'assistant' && (
      <div class="flex items-center space-x-2 mb-1">
        <div class="w-6 h-6 bg-lexara-navy rounded-full flex items-center justify-center">
          <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <span class="text-xs font-medium text-lexara-slate">Legal Assistant</span>
      </div>
    )}
    
    <div class="message-content">
      {message.role === 'system' ? (
        <div set:html={message.content} />
      ) : (
        <div class="whitespace-pre-wrap" set:html={message.content.replace(/\n/g, '<br>')} />
      )}
    </div>
    
    {message.metadata?.isStreaming && (
      <div class="typing-indicator mt-2">
        <div class="typing-dot"></div>
        <div class="typing-dot" style="animation-delay: 0.2s;"></div>
        <div class="typing-dot" style="animation-delay: 0.4s;"></div>
      </div>
    )}
    
    {message.metadata?.error && (
      <div class="mt-2 text-xs text-red-600 bg-red-50 px-2 py-1 rounded">
        Error: {message.metadata.error}
      </div>
    )}
    
    <div class={`text-xs ${message.role === 'user' ? 'text-lexara-blue-gray' : 'text-lexara-gray-400'} mt-1`}>
      {formatTimestamp(message.timestamp)}
    </div>
  </div>
</div>

<style>
  .message-content {
    line-height: 1.5;
  }
  
  .message-content a {
    @apply text-lexara-navy underline hover:text-lexara-slate;
  }
  
  .message-content strong {
    @apply font-semibold;
  }
  
  .message-content em {
    @apply italic;
  }
  
  .message-content ul, .message-content ol {
    @apply ml-4 my-2;
  }
  
  .message-content li {
    @apply mb-1;
  }
  
  .message-content code {
    @apply bg-lexara-gray-100 px-1 py-0.5 rounded text-sm font-mono;
  }
  
  .message-content pre {
    @apply bg-lexara-gray-100 p-3 rounded-md overflow-x-auto text-sm font-mono my-2;
  }
</style>