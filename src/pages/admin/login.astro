---
import BaseLayout from '../../layouts/BaseLayout.astro';

// Get redirect URL from query params
const redirectUrl = Astro.url.searchParams.get('redirect') || '/admin';
const error = Astro.url.searchParams.get('error');

// Error messages
const errorMessages: Record<string, string> = {
  invalid_token: 'Your session has expired. Please log in again.',
  auth_failed: 'Authentication failed. Please try again.',
  logout: 'You have been logged out successfully.'
};

const errorMessage = error ? errorMessages[error] || 'An error occurred. Please try again.' : null;
---

<BaseLayout title="Admin Login - Engage">
  <div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
        Sign in to Engage Admin
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Law firm administration portal
      </p>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
      <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
        {errorMessage && (
          <div class="mb-4 rounded-md bg-red-50 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <p class="text-sm font-medium text-red-800">{errorMessage}</p>
              </div>
            </div>
          </div>
        )}

        <form id="login-form" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700">
              Email address
            </label>
            <div class="mt-1">
              <input
                id="email"
                name="email"
                type="email"
                autocomplete="email"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              />
            </div>
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700">
              Password
            </label>
            <div class="mt-1">
              <input
                id="password"
                name="password"
                type="password"
                autocomplete="current-password"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              />
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                Remember me
              </label>
            </div>

            <div class="text-sm">
              <a href="#" class="font-medium text-indigo-600 hover:text-indigo-500">
                Forgot your password?
              </a>
            </div>
          </div>

          <div>
            <button
              type="submit"
              class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Sign in
            </button>
          </div>
        </form>

        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white text-gray-500">Or continue with</span>
            </div>
          </div>

          <div class="mt-6">
            <button
              id="auth0-login"
              class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
            >
              <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"/>
              </svg>
              Sign in with Auth0
            </button>
          </div>
        </div>

        {import.meta.env.DEV && (
          <div class="mt-6 p-4 bg-yellow-50 rounded-md">
            <p class="text-sm text-yellow-800 font-medium">Development Mode</p>
            <p class="text-xs text-yellow-700 mt-1">
              Use email: admin@lawfirm.com<br />
              Password: password
            </p>
            <button
              id="dev-login"
              class="mt-2 w-full inline-flex justify-center py-2 px-4 border border-yellow-300 rounded-md shadow-sm bg-yellow-100 text-sm font-medium text-yellow-800 hover:bg-yellow-200"
            >
              Quick Dev Login
            </button>
          </div>
        )}
      </div>
    </div>
  </div>

  <script define:vars={{ redirectUrl }}>
    // Handle login form submission
    document.getElementById('login-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const email = (document.getElementById('email') as HTMLInputElement).value;
      const password = (document.getElementById('password') as HTMLInputElement).value;
      
      try {
        // In production, this would authenticate against Auth0
        // For now, we'll use a mock authentication
        
        if (email === 'admin@lawfirm.com' && password === 'password') {
          // Set a test token in cookie
          document.cookie = `admin_token=test-token; path=/; max-age=${60 * 60 * 24}`; // 24 hours
          window.location.href = redirectUrl;
        } else {
          throw new Error('Invalid credentials');
        }
        
      } catch (error) {
        console.error('Login failed:', error);
        window.location.href = `/admin/login?error=auth_failed&redirect=${encodeURIComponent(redirectUrl)}`;
      }
    });

    // Handle Auth0 login
    document.getElementById('auth0-login')?.addEventListener('click', () => {
      // In production, this would redirect to Auth0
      alert('Auth0 integration will be implemented when Auth0 credentials are configured');
    });

    // Handle dev login
    document.getElementById('dev-login')?.addEventListener('click', () => {
      // Set test token and redirect
      document.cookie = `admin_token=test-token; path=/; max-age=${60 * 60 * 24}`; // 24 hours
      window.location.href = redirectUrl;
    });
  </script>
</BaseLayout>