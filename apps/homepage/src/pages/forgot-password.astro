---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout 
  title="Reset Password - Lexara" 
  description="Reset your Lexara account password"
  showNavigation={false}
>
  <div class="min-h-screen bg-gradient-to-br from-lexara-light to-blue-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <!-- Header -->
      <div class="text-center">
        <div class="flex justify-center items-center space-x-3 mb-6">
          <div class="w-12 h-12 bg-lexara-primary rounded-xl flex items-center justify-center">
            <span class="text-white font-bold text-xl">L</span>
          </div>
          <h1 class="text-3xl font-bold text-lexara-secondary">Lexara</h1>
        </div>
        <h2 class="text-2xl font-bold text-lexara-secondary mb-2">
          Reset Your Password
        </h2>
        <p class="text-lexara-gray">
          Enter your email address and we'll send you a link to reset your password.
        </p>
      </div>

      <!-- Password Reset Form -->
      <div class="bg-white rounded-2xl shadow-lg p-8">
        <form id="forgot-password-form" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-lexara-secondary mb-2">
              Email Address
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexara-primary focus:border-transparent"
              placeholder="Enter your email address"
            >
          </div>

          <!-- Status Messages -->
          <div id="reset-status" class="hidden">
            <div id="reset-success" class="hidden bg-green-50 border border-green-200 rounded-lg p-4">
              <div class="flex items-center">
                <svg class="w-5 h-5 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
                <span id="reset-success-text" class="text-sm text-green-800"></span>
              </div>
            </div>
            
            <div id="reset-error" class="hidden bg-red-50 border border-red-200 rounded-lg p-4">
              <div class="flex items-center">
                <svg class="w-5 h-5 text-red-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
                <span id="reset-error-text" class="text-sm text-red-800"></span>
              </div>
            </div>
          </div>

          <!-- Submit Button -->
          <button 
            type="submit" 
            id="reset-button"
            class="w-full bg-lexara-primary text-white py-3 rounded-lg font-medium hover:bg-blue-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span class="flex items-center justify-center">
              <svg id="reset-spinner" class="hidden animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <span id="reset-text">Send Reset Link</span>
            </span>
          </button>

          <div class="text-center">
            <a href="/firm/login" class="text-lexara-primary hover:underline text-sm">
              Back to Sign In
            </a>
          </div>
        </form>
      </div>
    </div>
  </div>
</BaseLayout>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('forgot-password-form');
    
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const email = document.getElementById('email').value;
        
        if (!email) {
          showError('Please enter your email address');
          return;
        }
        
        try {
          showLoading(true);
          hideMessages();
          
          // For now, show a success message since we don't have the backend implemented
          // TODO: Implement actual password reset API call
          setTimeout(() => {
            showLoading(false);
            showSuccess('If an account with that email exists, we\'ve sent you a password reset link. Please check your email.');
          }, 1000);
          
        } catch (error) {
          console.error('Password reset error:', error);
          showError('Failed to send reset link. Please try again.');
          showLoading(false);
        }
      });
    }
    
    function showLoading(show) {
      const button = document.getElementById('reset-button');
      const spinner = document.getElementById('reset-spinner');
      const text = document.getElementById('reset-text');
      
      if (show) {
        button.disabled = true;
        spinner.classList.remove('hidden');
        text.textContent = 'Sending...';
      } else {
        button.disabled = false;
        spinner.classList.add('hidden');
        text.textContent = 'Send Reset Link';
      }
    }
    
    function showSuccess(message) {
      const container = document.getElementById('reset-status');
      const success = document.getElementById('reset-success');
      const text = document.getElementById('reset-success-text');
      
      container.classList.remove('hidden');
      success.classList.remove('hidden');
      text.textContent = message;
    }
    
    function showError(message) {
      const container = document.getElementById('reset-status');
      const error = document.getElementById('reset-error');
      const text = document.getElementById('reset-error-text');
      
      container.classList.remove('hidden');
      error.classList.remove('hidden');
      text.textContent = message;
    }
    
    function hideMessages() {
      const container = document.getElementById('reset-status');
      const success = document.getElementById('reset-success');
      const error = document.getElementById('reset-error');
      
      container.classList.add('hidden');
      success.classList.add('hidden');
      error.classList.add('hidden');
    }
  });
</script>