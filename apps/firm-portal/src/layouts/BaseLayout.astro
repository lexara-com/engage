---
interface Props {
  title: string;
  description?: string;
  showNavigation?: boolean;
}

const { title, description, showNavigation = true } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,500;0,600;1,400&family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    
    <!-- Auth0 SPA SDK -->
    <script src="https://cdn.auth0.com/js/auth0-spa-js/2.1.3/auth0-spa-js.production.js"></script>
  </head>
  <body class="h-full bg-lexara-background antialiased font-sans">
    {showNavigation && (
      <nav id="main-navigation" class="bg-lexara-white shadow-sm border-b border-lexara-light">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center h-16">
            <!-- Logo -->
            <div class="flex items-center">
              <a href="/dashboard" class="flex items-center space-x-3">
                <div class="w-10 h-10 bg-lexara-primary rounded-lg flex items-center justify-center">
                  <span class="text-lexara-white font-bold text-lg">L</span>
                </div>
                <span class="text-2xl font-serif font-medium text-lexara-primary">LEXARA</span>
              </a>
            </div>

            <!-- Navigation Links -->
            <div class="hidden md:flex items-center space-x-8">
              <a href="/dashboard" class="nav-link text-lexara-secondary hover:text-lexara-primary transition-colors font-medium">
                Dashboard
              </a>
              <a href="/conversations" class="nav-link text-lexara-secondary hover:text-lexara-primary transition-colors font-medium">
                Conversations
              </a>
              <a href="/users" class="nav-link text-lexara-secondary hover:text-lexara-primary transition-colors font-medium">
                Team
              </a>
              <a href="/analytics" class="nav-link text-lexara-secondary hover:text-lexara-primary transition-colors font-medium">
                Analytics
              </a>
              <a href="/settings" class="nav-link text-lexara-secondary hover:text-lexara-primary transition-colors font-medium">
                Settings
              </a>
            </div>

            <!-- User Menu -->
            <div class="flex items-center space-x-4">
              <!-- Notifications -->
              <button class="relative p-2 text-lexara-gray hover:text-lexara-primary transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                        d="M15 17h5l-5-5V9a5 5 0 10-10 0v3l-5 5h5m0 0v1a3 3 0 106 0v-1m-6 0h6"></path>
                </svg>
                <span class="absolute -top-1 -right-1 w-3 h-3 bg-lexara-accent rounded-full"></span>
              </button>

              <!-- User Dropdown -->
              <div class="relative">
                <button id="user-menu-button" class="flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-100 transition-colors">
                  <div id="user-avatar" class="w-8 h-8 rounded-full bg-lexara-primary flex items-center justify-center">
                    <span id="user-initials" class="text-white text-sm font-medium">U</span>
                  </div>
                  <span id="user-name" class="text-sm font-medium text-lexara-secondary">Loading...</span>
                  <svg class="w-4 h-4 text-lexara-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                
                <!-- Dropdown Menu -->
                <div id="user-dropdown" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50">
                  <div class="px-4 py-2 border-b border-gray-100">
                    <p id="dropdown-user-name" class="text-sm font-medium text-lexara-secondary">User Name</p>
                    <p id="dropdown-user-email" class="text-xs text-lexara-gray">user@example.com</p>
                  </div>
                  <a href="/settings/profile" class="block px-4 py-2 text-sm text-lexara-gray hover:bg-gray-50 transition-colors">
                    Profile Settings
                  </a>
                  <a href="/settings/billing" class="block px-4 py-2 text-sm text-lexara-gray hover:bg-gray-50 transition-colors">
                    Billing
                  </a>
                  <a href="/help" class="block px-4 py-2 text-sm text-lexara-gray hover:bg-gray-50 transition-colors">
                    Help & Support
                  </a>
                  <div class="border-t border-gray-100 mt-2 pt-2">
                    <button id="logout-button" class="block w-full text-left px-4 py-2 text-sm text-lexara-error hover:bg-gray-50 transition-colors">
                      Sign Out
                    </button>
                  </div>
                </div>
              </div>

              <!-- Mobile Menu Button -->
              <button id="mobile-menu-button" class="md:hidden p-2 text-lexara-gray hover:text-lexara-primary transition-colors">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
              </button>
            </div>
          </div>
        </div>

        <!-- Mobile Navigation -->
        <div id="mobile-menu" class="hidden md:hidden border-t border-gray-200 bg-white">
          <div class="px-4 py-3 space-y-2">
            <a href="/dashboard" class="block py-2 text-lexara-gray hover:text-lexara-primary transition-colors">Dashboard</a>
            <a href="/conversations" class="block py-2 text-lexara-gray hover:text-lexara-primary transition-colors">Conversations</a>
            <a href="/users" class="block py-2 text-lexara-gray hover:text-lexara-primary transition-colors">Team</a>
            <a href="/analytics" class="block py-2 text-lexara-gray hover:text-lexara-primary transition-colors">Analytics</a>
            <a href="/settings" class="block py-2 text-lexara-gray hover:text-lexara-primary transition-colors">Settings</a>
          </div>
        </div>
      </nav>
    )}

    <main class={showNavigation ? "" : "pt-0"}>
      <slot />
    </main>

    <!-- Global Scripts -->
    <script>
      // Import auth utilities (will be available globally)
      import { initializeAuth, getUser, logout } from '@/utils/auth';

      // Initialize authentication when DOM loads
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          await initializeAuth();
          await updateUserInterface();
          setupEventListeners();
        } catch (error) {
          console.error('Failed to initialize app:', error);
        }
      });

      async function updateUserInterface() {
        const user = await getUser();
        
        if (user) {
          // Update user display
          const userNameElement = document.getElementById('user-name');
          const userInitialsElement = document.getElementById('user-initials');
          const dropdownUserNameElement = document.getElementById('dropdown-user-name');
          const dropdownUserEmailElement = document.getElementById('dropdown-user-email');
          
          if (userNameElement) userNameElement.textContent = user.name || 'User';
          if (userInitialsElement) {
            const initials = (user.name || user.email || 'U')
              .split(' ')
              .map(n => n[0])
              .join('')
              .toUpperCase()
              .slice(0, 2);
            userInitialsElement.textContent = initials;
          }
          if (dropdownUserNameElement) dropdownUserNameElement.textContent = user.name || 'User';
          if (dropdownUserEmailElement) dropdownUserEmailElement.textContent = user.email || '';

          // Update user avatar with profile picture if available
          if (user.picture) {
            const userAvatarElement = document.getElementById('user-avatar');
            if (userAvatarElement) {
              userAvatarElement.innerHTML = `<img src="${user.picture}" alt="Profile" class="w-8 h-8 rounded-full">`;
            }
          }
        }
      }

      function setupEventListeners() {
        // User dropdown toggle
        const userMenuButton = document.getElementById('user-menu-button');
        const userDropdown = document.getElementById('user-dropdown');
        
        if (userMenuButton && userDropdown) {
          userMenuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            userDropdown.classList.toggle('hidden');
          });

          // Close dropdown when clicking outside
          document.addEventListener('click', () => {
            userDropdown.classList.add('hidden');
          });
        }

        // Mobile menu toggle
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
          });
        }

        // Logout functionality
        const logoutButton = document.getElementById('logout-button');
        if (logoutButton) {
          logoutButton.addEventListener('click', async (e) => {
            e.preventDefault();
            try {
              await logout();
            } catch (error) {
              console.error('Logout failed:', error);
            }
          });
        }

        // Active navigation highlighting
        updateActiveNavigation();
      }

      function updateActiveNavigation() {
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav-link');
        
        navLinks.forEach(link => {
          const href = link.getAttribute('href');
          if (href && currentPath.startsWith(href) && href !== '/') {
            link.classList.add('text-lexara-primary', 'font-medium');
            link.classList.remove('text-lexara-gray');
          }
        });
      }
    </script>

    <style>
      /* Global styles */
      body {
        font-family: 'Open Sans', system-ui, sans-serif;
      }
      
      /* Brand typography */
      h1, h2, h3, h4, h5, h6 {
        font-family: 'Lora', serif;
      }

      /* Animation styles */
      .fade-in {
        animation: fadeIn 0.5s ease-in-out;
      }

      .slide-up {
        animation: slideUp 0.3s ease-out;
      }

      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }

      @keyframes slideUp {
        from { 
          transform: translateY(10px);
          opacity: 0;
        }
        to { 
          transform: translateY(0);
          opacity: 1;
        }
      }

      /* Loading spinner */
      .spinner {
        border: 2px solid #f3f4f6;
        border-top: 2px solid #1e40af;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
  </body>
</html>